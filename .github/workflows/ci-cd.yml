name: CI e Versionamento

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  ci:
    name: Testes (HTML, CSS, JS, PHP)
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositório
        uses: actions/checkout@v3

      - name: Instalar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Instalar dependências
        run: npm install

      - name: Criar pasta de relatórios
        run: mkdir -p relatorios

      - name: Lint HTMLHint
        run: |
          htmlhint '*.html' > relatorios/htmlhint.txt 2>&1
          if [ $? -eq 0 ]; then echo "OK: Nenhum problema encontrado no HTMLHint." >> relatorios/htmlhint.txt; fi

      - name: Lint ESLint (HTML)
        run: |
          eslint '*.html' -f unix > relatorios/eslint-html.txt 2>&1
          if [ $? -eq 0 ]; then echo "OK: Nenhum problema encontrado no ESLint (HTML)." >> relatorios/eslint-html.txt; fi

      - name: Lint ESLint (JS)
        run: |
          eslint 'src/js/**/*.js' -f unix > relatorios/eslint-js.txt 2>&1
          if [ $? -eq 0 ]; then echo "OK: Nenhum problema encontrado no ESLint (JS)." >> relatorios/eslint-js.txt; fi

      - name: Lint Stylelint
        run: |
          stylelint 'css/**/*.css' > relatorios/stylelint.txt 2>&1
          if [ $? -eq 0 ]; then echo "OK: Nenhum problema encontrado no Stylelint." >> relatorios/stylelint.txt; fi

      - name: Lint PHP
        run: |
          node scripts/php-lint.js > relatorios/php-lint.txt 2>&1
          if [ $? -eq 0 ]; then echo "OK: Nenhum problema encontrado no PHP Lint." >> relatorios/php-lint.txt; fi

      - name: Upload dos relatórios
        uses: actions/upload-artifact@v4
        with:
          name: relatorios-lint
          path: relatorios

  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    needs: ci
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Instalar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Instalar dependências
        run: npm install

      - name: Rodar semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run semantic-release
